# -*- coding: UTF-8 -*-
from wsdm_digg.constants import *
from wsdm_digg.benchmark.benchmarker import Benchmarker

# Benchmarker('baseline.jsonl', top_n=500, parallel_count=10).batch_runner()
# Benchmarker('baseline.jsonl', parallel_count=15, is_submit=True).batch_runner()

# Benchmarker('more_keywords.jsonl', top_n=20, parallel_count=15).batch_runner()
# Benchmarker('singlerank.jsonl', top_n=10, parallel_count=15).batch_runner()
# Benchmarker('singlerank_on_cites.jsonl', top_n=10, parallel_count=15).batch_runner()
# Benchmarker('weighted_textrank.jsonl', top_n=10, parallel_count=15).batch_runner()

# Benchmarker('weighted_textrank_w_3.jsonl', top_n=10, parallel_count=15).batch_runner()
# Benchmarker('cites_textrank.jsonl', top_n=10, parallel_count=15).batch_runner()
# Benchmarker('textrank_top10.jsonl', top_n=10, parallel_count=15).batch_runner()
# Benchmarker('cite_textrank_top10.jsonl', parallel_count=5, top_n=500).batch_runner()
# Benchmarker('no_desc_text_query_words.jsonl', parallel_count=5, top_n=500).batch_runner()
# Benchmarker('text_noun_chunk.jsonl', parallel_count=5, top_n=100).batch_runner()
# Benchmarker('weight_t3_a5.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('weight_t3_a5_k1.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('weight_t7_a10.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('noun_chunk_non_restriction.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('cite_keywords_w2.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('query_word_lemma.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('query_terms_dedupe.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('text_singlerank.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('text_textrank_binary_top5.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('textrank_join_keyword.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('textrank_join_keyword_t10_c15.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('textrank_t10_c15.jsonl', parallel_count=15, top_n=100).batch_runner()
# Benchmarker('textrank_t10_c10.jsonl', parallel_count=20, top_n=100).batch_runner()
# Benchmarker('textrank_t_window10.jsonl', parallel_count=20, top_n=100).batch_runner()
# Benchmarker('textrank_t_window3_c_window3.jsonl', parallel_count=20, top_n=100).batch_runner()
# Benchmarker('paper_keywords_oracle.jsonl', parallel_count=20, top_n=100).batch_runner()
# Benchmarker('cite_textrank_top10.jsonl', parallel_count=5, top_n=100, is_submit=True).batch_runner()
# Benchmarker('cite_textrank_top10.jsonl', parallel_count=5, top_n=100, is_submit=True).batch_runner()
# Benchmarker('abstract_weight_5.jsonl', top_n=10, parallel_count=15).batch_runner()
# Benchmarker('no_text_textrank.jsonl', top_n=100, parallel_count=5).batch_runner()
# Benchmarker('noun_chunk_search_keywords.jsonl', top_n=50, parallel_count=5).batch_runner()
# Benchmarker('noun_chunk_lemma.jsonl', top_n=50, parallel_count=5).batch_runner()
# Benchmarker('cite_textrank_regression.jsonl', top_n=50, parallel_count=5).batch_runner()
# Benchmarker('cite_textrank_top15.jsonl', top_n=100, parallel_count=15).batch_runner()
# Benchmarker('cite_textrank_top15_TA.jsonl', top_n=100, parallel_count=15).batch_runner()
# Benchmarker('cite_textrank_top15_TA_weight5.jsonl', top_n=100, parallel_count=15).batch_runner()
# Benchmarker('cite_textrank_top15_TA_weight10.jsonl', top_n=100, parallel_count=15).batch_runner()
# Benchmarker('only_TA.jsonl', top_n=500, parallel_count=20).batch_runner()
# Benchmarker('only_TA_prf.jsonl', top_n=100, parallel_count=20).batch_runner()
# Benchmarker('only_TA_prf_2.jsonl', top_n=100, parallel_count=20).batch_runner()
# Benchmarker('only_TA_copyrnn.jsonl', top_n=100, parallel_count=20).batch_runner()
# Benchmarker('only_TA_copyrnn_b50.jsonl', top_n=100, parallel_count=20).batch_runner()
Benchmarker('only_TA_release.jsonl', top_n=100, parallel_count=20,
            is_final_submit=True).batch_runner()
# Benchmarker('TA_abstract.jsonl', top_n=100, parallel_count=20).batch_runner()
# Benchmarker('TA_text_textrank.jsonl', top_n=100, parallel_count=20).batch_runner()
# Benchmarker('TA_textrank_text_10_cites_20.jsonl', top_n=100, parallel_count=20).batch_runner()
# Benchmarker('TA_text_noun_chunk.jsonl', top_n=100, parallel_count=20).batch_runner()
# Benchmarker('TA_singlerank.jsonl', top_n=100, parallel_count=20).batch_runner()
# Benchmarker('TA_singlerank.jsonl', top_n=100, parallel_count=20, is_submit=True).batch_runner()
# Benchmarker('TA_singlerank_train.jsonl', src_filename=DATA_DIR + 'train.jsonl',
#             top_n=500, parallel_count=20).batch_runner()
